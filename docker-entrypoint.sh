#!/usr/bin/env bash

set -e

HOST=$(hostname -s)
DOMAIN=$(hostname -d)
LOG_LEVEL=${LOG_LEVEL:-INFO}
DATA_DIR=${DATA_DIR:-"/var/lib/zookeeper/data"}
DATA_LOG_DIR=${DATA_LOG_DIR:-"/var/lib/zookeeper/log"}
LOG_DIR=${LOG_DIR:-"/var/log/zookeeper"}
CONF_DIR=${CONF_DIR:-"/opt/zookeeper/conf"}
CLIENT_PORT=${CLIENT_PORT:-2181}
SERVER_PORT=${SERVER_PORT:-2888}
ELECTION_PORT=${ELECTION_PORT:-3888}
TICK_TIME=${TICK_TIME:-2000}
INIT_LIMIT=${INIT_LIMIT:-10}
SYNC_LIMIT=${SYNC_LIMIT:-5}
HEAP=${HEAP:-1G}
MAX_CLIENT_CNXNS=${MAX_CLIENT_CNXNS:-60}
SNAP_RETAIN_COUNT=${SNAP_RETAIN_COUNT:-3}
PURGE_INTERVAL=${PURGE_INTERVAL:-0}
MIN_SESSION_TIMEOUT=${MIN_SESSION_TIMEOUT:-$((TICK_TIME*2))}
MAX_SESSION_TIMEOUT=${MAX_SESSION_TIMEOUT:-$((TICK_TIME*20))}
SERVERS=${SERVERS:-1}
CONFIG_FILE=${CONFIG_FILE:-"$CONF_DIR/zoo.cfg"}
LOGGER_PROPS_FILE=${LOGGER_PROPS_FILE:-"$CONF_DIR/log4j.properties"}
JAVA_ENV_FILE=${JAVA_ENV_FILE:-"$CONF_DIR/java.env"}
ID_FILE=${ID_FILE:-"$DATA_DIR/myid"}

function create_data_dirs() {
    if [ ! -d $DATA_DIR  ]; then
        mkdir -p $DATA_DIR
    fi

    if [ ! -d $DATA_LOG_DIR  ]; then
        mkdir -p $DATA_LOG_DIR
    fi

    if [ ! -d $LOG_DIR  ]; then
        mkdir -p $LOG_DIR
    fi

    if [ ! -f $ID_FILE ] && [ $SERVERS -gt 1 ]; then
        echo $MY_ID >> $ID_FILE
    fi
}

function print_servers() {
    for (( i=1; i<=$SERVERS; i++ ))
    do
        echo "server.$i=$NAME-$((i-1)).$DOMAIN:$SERVER_PORT:$ELECTION_PORT"
    done
}

function create_jvm_props() {
    rm -f $JAVA_ENV_FILE
    echo "ZOO_LOG_DIR=$LOG_DIR" >> $JAVA_ENV_FILE
    echo "JVMFLAGS=\"-Xmx$HEAP -Xms$HEAP\"" >> $JAVA_ENV_FILE
}

function create_log_props() {
    rm -f $LOGGER_PROPS_FILE
    echo "Creating ZooKeeper log4j configuration"
    {
        echo "zookeeper.root.logger=CONSOLE"
        echo "zookeeper.console.threshold="$LOG_LEVEL
        echo "log4j.rootLogger=\${zookeeper.root.logger}"
        echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender"
        echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}"
        echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout"
        echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n"
    } >> "$LOGGER_PROPS_FILE"
}

function create_config() {
    rm -f $CONFIG_FILE
    {
        echo "#This file was autogenerated DO NOT EDIT"
        echo "clientPort=$CLIENT_PORT"
        echo "dataDir=$DATA_DIR"
        echo "dataLogDir=$DATA_LOG_DIR"

        echo "tickTime=$TICK_TIME"
        echo "initLimit=$INIT_LIMIT"
        echo "syncLimit=$SYNC_LIMIT"

        echo "autopurge.snapRetainCount=$SNAP_RETAIN_COUNT"
        echo "autopurge.purgeInterval=$PURGE_INTERVAL"
        echo "maxClientCnxns=$MAX_CLIENT_CNXNS"

        echo "minSessionTimeout=$MIN_SESSION_TIMEOUT"
        echo "maxSessionTimeout=$MAX_SESSION_TIMEOUT"
    } >> "$CONFIG_FILE"

    if [ $SERVERS -gt 1 ]; then
        print_servers >> $CONFIG_FILE
    fi
}

# Set the time zone to ensure that the program gets the correct time.
function get_timezone() {
    date +"%Z %z" > /etc/timezone
}

if [[ $SERVERS -gt 1 ]]; then
  if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
      NAME=${BASH_REMATCH[1]}
      ORD=${BASH_REMATCH[2]}
  else
      echo "Fialed to parse name and ordinal of Pod"
      exit 1
  fi

  MY_ID=$((ORD+1))
fi

get_timezone && create_data_dirs && create_config && create_jvm_props && create_log_props
chown -R zookeeper "$DATA_DIR" "$DATA_LOG_DIR" "$LOG_DIR" "$CONF_DIR"
exec su-exec zookeeper "$@"
